@using CheFuZi.Function
@model CheFuZi.Models.GameModel
@{
    ViewBag.Title = ViewBag.Headline;
    Layout = "~/Views/Shared/_Manage.cshtml";
}

<div class="btn-toolbar" role="toolbar">
    <div class="btn-group">
        <a class="btn btn-default" onclick="javascript: window.history.back(); " href="#"><span class="glyphicon glyphicon-arrow-left"></span> 返回</a>
    </div>
</div>
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-field">
            @Html.HiddenFor(model => model.GameId)
            @Html.HiddenFor(model => model.Operate)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.GameName)
            @Html.ValidationMessageFor(model => model.GameName)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.GameName, new { @class = "form-control FormWidth-m" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.GameImage)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.GameImage, new { @class = "form-control FormWidth-l" })
            <div id="buttonUpload">

            </div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.GameUrl)
            @Html.ValidationMessageFor(model => model.GameUrl)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.GameUrl, new { @class = "form-control FormWidth-l", @type = "url", @placeholder="http://" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.GameDescribe)
            @Html.ValidationMessageFor(model => model.GameDescribe)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.GameDescribe, new { @class = "form-control FormWidth-l", @rows = 5 })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.OrderBy)
            @Html.ValidationMessageFor(model => model.OrderBy)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OrderBy, new { @class = "form-control FormWidth-ss", @type = "number" })
        </div>

        <div class="editor-field" style="position:relative;top:10px;">
            <button type="submit" class="btn btn-primary FormWidth-s">@ViewBag.ButtonValue</button>
        </div>
    </fieldset>
}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
}
@{
    ViewBag.UpLoadSize = 3;
    ViewBag.UpLoadFileType = "*.jpg;*.png;*.jpeg;*.gif";
    ViewBag.UpLoadButtonId = "buttonUpload";
    ViewBag.UpLoadTextBoxId = "GameImage";
    ViewBag.JsUploadFun = "upload";
}
@Html.Partial("../Shared/_UpLoadPartial");
