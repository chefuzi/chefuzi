@model CheFuZi.Models.TeacherArticleModel
@{
    ViewBag.Title = ViewBag.Headline;
    Layout = "~/Views/Shared/_Manage.cshtml";
}
@section cssstyle{
    <link href="~/WebEditor/themes/default/css/umeditor.min.css" type="text/css" rel="stylesheet">
}
<div class="btn-toolbar" role="toolbar">
    <div class="btn-group">
        <a class="btn btn-default" onclick="javascript: window.history.back(); " href="#"><span class="glyphicon glyphicon-arrow-left"></span> 返回</a>
    </div>
</div>
@using (Html.BeginForm(new { ReturnUrl = ViewBag.ReturnUrl }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="editor-field">
            @Html.HiddenFor(model => model.ArticlId)
            @Html.HiddenFor(model => model.Operate)
        </div>

        <div class="control-group">
            <label class="control-label" for="inputEmail">课程类别：</label>
            <div class="controls">
                <select name="ClassId" id="ClassId" class="form-control FormWidth-m">
                    @{
    if (ViewBag.DataListClass != null)
    {
        foreach (var myItem in ViewBag.DataListClass)
        {
            <option value="@myItem.ClassId" @if (@Model.ClassId == myItem.ClassId) { @MvcHtmlString.Create("selected")        }>
                @myItem.ClassTitle
            </option>
        }
    }
                    }
                </select>

            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleTitle)
            @Html.ValidationMessageFor(model => model.ArticleTitle)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ArticleTitle, new { @class = "form-control FormWidth-m" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleAuthor)
            @Html.ValidationMessageFor(model => model.ArticleAuthor)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ArticleAuthor, new { @class = "form-control FormWidth-m" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleImages)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ArticleImages, new { @class = "form-control FormWidth-l" })
            <div id="buttonUpload" style="z-index:0;">

            </div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleVideo)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.ArticleVideo, new { @class = "form-control FormWidth-l" })
            <div id="buttonUploadVideo" style="z-index:0;">

            </div>
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleSummary)
            @Html.ValidationMessageFor(model => model.ArticleSummary)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.ArticleSummary, new { @class = "form-control FormWidth-x", @rows = "5" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.OrderBy)
            @Html.ValidationMessageFor(model => model.OrderBy)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.OrderBy, new { @class = "form-control FormWidth-ss", @type = "number" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.ArticleContent)
            @Html.ValidationMessageFor(model => model.ArticleContent)
        </div>
        <div class="editor-field">
            <script type="text/plain" id="myEditor" style="width:100%;height:300px;">
                @{
    if (!String.IsNullOrWhiteSpace(Model.ArticleContent))
    {
        @MvcHtmlString.Create(Model.ArticleContent)
    }
    else
    {
        @MvcHtmlString.Create("<p></p>")
    }
                }

            </script>
            <div class="clearfix"></div>
        </div>

        <div class="editor-field" style="position:relative;top:10px;">
            <button type="submit" class="btn btn-primary FormWidth-s">@ViewBag.ButtonValue</button>
        </div>
    </fieldset>
}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" charset="utf-8" src="~/WebEditor/umeditor.config.js"></script>
<script type="text/javascript" charset="utf-8" src="~/WebEditor/umeditor.min.js"></script>
<script type="text/javascript" src="~/WebEditor/lang/zh-cn/zh-cn.js"></script>
}

@{
    ViewBag.UpLoadSize = 3;
    ViewBag.UpLoadFileType = "*.jpg;*.jpeg;*.png;*.gif";
    ViewBag.UpLoadButtonId = "buttonUpload";
    ViewBag.UpLoadTextBoxId = "ArticleImages";
    ViewBag.JsUploadFun = "upload";
}
@Html.Partial("../Shared/_UpLoadPartial")

@{
    ViewBag.UpLoadSize = 500;
    ViewBag.UpLoadFileType = "*.mp4";
    ViewBag.UpLoadButtonId = "buttonUploadVideo";
    ViewBag.UpLoadTextBoxId = "ArticleVideo";
    ViewBag.JsUploadFun = "upload2";
}
@Html.Partial("../Shared/_UpLoadPartial")

<script type="text/javascript">
    var um = UM.getEditor('myEditor', {
        UMEDITOR_HOME_URL: "/WebEditor/",
        imageUrl: "/FileUploadWeb/ImageUpLoadEditor",
        imagePath: "",
        imageFieldName: "upfile",
        textarea: "ArticleContent"
    });
    um.options.toolbar.concat;
    function getContent() {
        var arr = [];
        arr.push("使用editor.getContent()方法可以获得编辑器的内容");
        arr.push("内容为222：");
        arr.push(UM.getEditor('myEditor').getContent());
        alert(arr.join("\n"));
    }
</script>
